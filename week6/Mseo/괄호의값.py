#괄호의 값
"""
아직 해결 못함


4개의 기호 ‘(’, ‘)’, ‘[’, ‘]’를 이용해서 만들어지는 괄호열 중에서 올바른 괄호열이란 다음과 같이 정의된다.

한 쌍의 괄호로만 이루어진 ‘()’와 ‘[]’는 올바른 괄호열이다.
만일 X가 올바른 괄호열이면 ‘(X)’이나 ‘[X]’도 모두 올바른 괄호열이 된다.
X와 Y 모두 올바른 괄호열이라면 이들을 결합한 XY도 올바른 괄호열이 된다.
예를 들어 ‘(()[[]])’나 ‘(())[][]’ 는 올바른 괄호열이지만 ‘([)]’ 나 ‘(()()[]’ 은 모두 올바른 괄호열이 아니다.
우리는 어떤 올바른 괄호열 X에 대하여 그 괄호열의 값(괄호값)을 아래와 같이 정의하고 값(X)로 표시한다.

‘()’ 인 괄호열의 값은 2이다.
‘[]’ 인 괄호열의 값은 3이다.
‘(X)’ 의 괄호값은 2×값(X) 으로 계산된다.
‘[X]’ 의 괄호값은 3×값(X) 으로 계산된다.
올바른 괄호열 X와 Y가 결합된 XY의 괄호값은 값(XY)= 값(X)+값(Y) 로 계산된다.
예를 들어 ‘(()[[]])([])’ 의 괄호값을 구해보자. ‘()[[]]’ 의 괄호값이 2 + 3×3=11 이므로 ‘(()[[]])’의 괄호값은 2×11=22 이다. 
그리고 ‘([])’의 값은 2×3=6 이므로 전체 괄호열의 값은 22 + 6 = 28 이다.

여러분이 풀어야 할 문제는 주어진 괄호열을 읽고 그 괄호값을 앞에서 정의한대로 계산하여 출력하는 것이다.

문제 생각

좋은 단어와 비슷한 문제이지만 조금은 코드가 더 필요한 문제이다

(, [을 만났을 때는 push를 해준다
), ] 를 만났을 때 pop한다 pop이 연속으로 2번 이상이 반복된다면 *이를 해준다

첫째 줄에 괄호열을 나타내는 문자열(스트링)이 주어진다. 단 그 길이는 1 이상, 30 이하이다.


(()[[]])([])

((
"""
import sys
I=sys.stdin.readline

s=I().strip()
i=0
stack_=[0,]
sum=0
while(i<len(s)):
    if s[i]=='(':
        stack_.append(s[i])
        i+=1
        tmp=1
        while((s[i]==")" and stack_[-1]=="(") or (s[i]=="]" and stack_[-1]=="[")):
            print(stack_, s[i])
            stack_.pop()
            if s[i]==")" and s[i-1]=="]":
                sum+=tmp
                sum*=2
            elif s[i]=="]" and s[i-1]==")":
                sum+=tmp
                sum*=3
            elif s[i]==")":
                tmp*=2
            else:
                tmp*=3
            print(sum, tmp)
            i+=1
            if i>=len(s):
                break
        sum+=tmp
        print(stack_, sum)
        print("\n")
print(sum)